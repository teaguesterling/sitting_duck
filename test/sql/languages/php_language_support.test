# name: test/sql/php_language_support.test
# description: Test PHP language support functionality
# group: [sitting_duck]

require sitting_duck

# Test 1: PHP language is supported
# =================================

query I
SELECT language FROM ast_supported_languages() WHERE language = 'php';
----
php

# Test 2: PHP file extension auto-detection
# =========================================

query I
SELECT COUNT(*) > 0 FROM read_ast('test/data/php/test.php');
----
true

# Test 3: Explicit PHP language specification
# ===========================================

query I
SELECT COUNT(*) FROM read_ast('test/data/php/test.php', 'php') WHERE name IS NOT NULL;
----
196

# Test 4: PHP class and function name extraction
# ==============================================

query II
SELECT name, type FROM read_ast('test/data/php/test.php') 
WHERE type IN ('class_declaration', 'function_definition', 'method_declaration') AND name IS NOT NULL 
ORDER BY start_line;
----
User	class_declaration
__construct	method_declaration
getName	method_declaration
getEmail	method_declaration
validateEmail	method_declaration
isValid	method_declaration
validate	method_declaration
EmailValidator	class_declaration
validate	method_declaration
createUser	function_definition
formatName	function_definition

# Test 5: PHP namespace and use declarations
# ==========================================

query II
SELECT name, type FROM read_ast('test/data/php/test.php')
WHERE type IN ('namespace_definition', 'namespace_use_declaration') AND name IS NOT NULL
ORDER BY start_line;
----
App\Models	namespace_definition
use DateTime;	namespace_use_declaration
use Exception;	namespace_use_declaration

# Test 6: PHP semantic types
# ==========================

query III
SELECT type, semantic_type, COUNT(*) as count
FROM read_ast('test/data/php/test.php')
WHERE type IN ('class_declaration', 'function_definition', 'namespace_definition')
GROUP BY type, semantic_type
ORDER BY type;
----
class_declaration	248	2
function_definition	240	2
namespace_definition	252	1

# Test 7: PHP interface detection
# ===============================

query II
SELECT name, type FROM read_ast('test/data/php/test.php')
WHERE type = 'interface_declaration' AND name IS NOT NULL;
----
Validator	interface_declaration

# Test 8: PHP tree structure validation
# =====================================

query II
SELECT MAX(depth) as max_depth, COUNT(*) as total_nodes
FROM read_ast('test/data/php/test.php');
----
13	625

# Test 9: PHP identifier extraction
# =================================

query I
SELECT COUNT(*) FROM read_ast('test/data/php/test.php')
WHERE type = 'name' AND name IS NOT NULL;
----
83