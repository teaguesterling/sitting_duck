# Custom Linux builds using our Docker images with Node.js and tree-sitter
name: Custom Linux Distribution
on:
  workflow_call:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/duckdb-extension

jobs:
  linux:
    name: Linux (${{ matrix.duckdb_arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - duckdb_arch: linux_amd64
            vcpkg_target_triplet: x64-linux-release
          - duckdb_arch: linux_amd64_musl
            vcpkg_target_triplet: x64-linux-release

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'true'

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build extension using custom Docker image
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            --workdir /workspace \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main-${{ matrix.duckdb_arch }} \
            bash -c "
              set -e
              echo 'Node.js version:' && node --version
              echo 'npm version:' && npm --version  
              echo 'tree-sitter version:' && tree-sitter --version
              echo 'Rust version:' && rustc --version
              echo 'Starting build...'
              
              # Build debug version for testing
              make debug
              
              # Run tests
              echo 'Running tests...'
              make test
              
              # Build release version
              echo 'Building release version...'
              make release
              
              # Copy artifacts to expected locations
              mkdir -p /workspace/build/extension_artifacts
              cp build/release/*.duckdb_extension /workspace/build/extension_artifacts/ || true
              cp build/release/extension/*/*.duckdb_extension /workspace/build/extension_artifacts/ || true
              
              echo 'Build completed successfully'
            "

      - name: Deploy
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.duckdb_arch }}-extensions
          path: |
            build/extension_artifacts/*.duckdb_extension
          if-no-files-found: error

      - name: Deploy test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.duckdb_arch }}-test-results
          path: |
            build/debug/test/unittest
          if-no-files-found: ignore