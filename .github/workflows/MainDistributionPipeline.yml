#
# This workflow uses custom Docker images with Node.js and tree-sitter CLI for building the extension
#
name: Main Extension Distribution Pipeline
on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  build-docker-images:
    name: Build Custom Docker Images
    uses: ./.github/workflows/build-custom-docker.yml
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      packages: write

  duckdb-custom-build:
    name: Build extension binaries (custom Docker)
    uses: ./.github/workflows/custom-distribution.yml
    needs: build-docker-images
    if: always() && (needs.build-docker-images.result == 'success' || needs.build-docker-images.result == 'skipped')
    permissions:
      contents: read
      packages: read

  # Keep fallback to standard pipeline for non-Linux platforms
  duckdb-fallback-build:
    name: Build extension binaries (fallback)
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_distribution.yml@main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: sitting_duck
      extra_toolchains: rust
      exclude_archs: "linux_amd64;linux_arm64;linux_amd64_musl"
